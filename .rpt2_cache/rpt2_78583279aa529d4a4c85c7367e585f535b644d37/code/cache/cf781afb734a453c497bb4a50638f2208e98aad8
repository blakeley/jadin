{"code":"import Event from './Event';\r\nvar Note = /** @class */ (function () {\r\n    function Note(onEvent, offEvent) {\r\n        if (onEvent === void 0) { onEvent = new Event(); }\r\n        if (offEvent === void 0) { offEvent = new Event(); }\r\n        this.onEvent = onEvent;\r\n        this.offEvent = offEvent;\r\n        onEvent.note = this;\r\n        offEvent.note = this;\r\n    }\r\n    Object.defineProperty(Note.prototype, \"onTick\", {\r\n        get: function () {\r\n            return this.onEvent.tick;\r\n        },\r\n        set: function (value) {\r\n            if (value >= this.offTick)\r\n                throw \"Cannot set onTick to be greater than or equal to offTick\";\r\n            this.onEvent.tick = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Note.prototype, \"offTick\", {\r\n        get: function () {\r\n            return this.offEvent.tick;\r\n        },\r\n        set: function (value) {\r\n            if (value <= this.onTick)\r\n                throw \"Cannot set offTick to be less than or equal to onTick\";\r\n            this.offEvent.tick = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Note.prototype, \"midi\", {\r\n        get: function () {\r\n            return this.track.midi;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Note.prototype, \"number\", {\r\n        get: function () {\r\n            return this.onEvent.number;\r\n        },\r\n        set: function (value) {\r\n            this.onEvent.number = value;\r\n            this.offEvent.number = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Note.prototype, \"onSecond\", {\r\n        get: function () {\r\n            return this.onEvent.second;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Note.prototype, \"offSecond\", {\r\n        get: function () {\r\n            return this.offEvent.second;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Note.prototype, \"duration\", {\r\n        get: function () {\r\n            return this.offSecond - this.onSecond;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Note.prototype.onAt = function (second) {\r\n        return this.onSecond <= second && second <= this.offSecond;\r\n    };\r\n    Note.prototype.onDuring = function (onSecond, offSecond) {\r\n        return this.onSecond <= offSecond && this.offSecond >= onSecond;\r\n    };\r\n    return Note;\r\n}());\r\nexport default Note;\r\n"}
