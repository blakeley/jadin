{"code":"var Cursor = /** @class */ (function () {\r\n    function Cursor(events) {\r\n        this.events = events;\r\n        this.index = 0;\r\n        this.second = 0;\r\n    }\r\n    Object.defineProperty(Cursor.prototype, \"nextEvent\", {\r\n        get: function () {\r\n            return this.events[this.index];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Cursor.prototype, \"previousEvent\", {\r\n        get: function () {\r\n            return this.events[this.index - 1];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Cursor.prototype.forward = function (second, callbacks) {\r\n        if (callbacks === void 0) { callbacks = {}; }\r\n        this.second = second;\r\n        while (!!this.nextEvent && this.nextEvent.second <= second) {\r\n            if (!!callbacks[this.nextEvent.subtype]) {\r\n                callbacks[this.nextEvent.subtype](this.nextEvent);\r\n            }\r\n            this.index++;\r\n        }\r\n    };\r\n    Cursor.prototype.backward = function (second, callbacks) {\r\n        if (callbacks === void 0) { callbacks = {}; }\r\n        this.second = second;\r\n        while (!!this.previousEvent && this.previousEvent.second > second) {\r\n            if (!!callbacks[this.previousEvent.subtype]) {\r\n                callbacks[this.previousEvent.subtype](this.previousEvent);\r\n            }\r\n            this.index--;\r\n        }\r\n    };\r\n    return Cursor;\r\n}());\r\nexport default Cursor;\r\n"}
