{"map":"{\"version\":3,\"file\":\"Midi.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/Midi.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import MidiReader from './MidiReader';\r\nimport Track from './Track';\r\nimport Cursor from './Cursor';\r\nvar Midi = /** @class */ (function () {\r\n    function Midi(data) {\r\n        this.format = 0;\r\n        this.ppqn = 480;\r\n        this.tracks = [];\r\n        this._tickToSecond = {};\r\n        this._tempoEvents = [];\r\n        if (!!data) {\r\n            var reader = new MidiReader(data);\r\n            var headerChunk = reader.readChunk();\r\n            var headerReader = new MidiReader(headerChunk.data);\r\n            this.format = headerReader.readInt(2);\r\n            if (this.format == 2)\r\n                throw \"MIDI format 2 not supported\";\r\n            var numberOfTracks = headerReader.readInt(2);\r\n            this.ppqn = headerReader.readInt(2); // assumes metrical timing\r\n            for (var i = 0; i < numberOfTracks; i++) {\r\n                var trackChunk = reader.readChunk();\r\n                this.createTrack(trackChunk.data);\r\n            }\r\n        }\r\n        else {\r\n            var tempoTrack = this.createTrack();\r\n        }\r\n    }\r\n    Midi.prototype.createTrack = function (data) {\r\n        var track = new Track(data);\r\n        track.midi = this;\r\n        this.tracks.push(track);\r\n        return track;\r\n    };\r\n    Midi.prototype.newCursor = function () {\r\n        return new Cursor(this.events.sort(function (e1, e2) { return e1.tick - e2.tick; }));\r\n    };\r\n    Object.defineProperty(Midi.prototype, \"notes\", {\r\n        get: function () {\r\n            return this.tracks\r\n                .map(function (track) { return track.notes; })\r\n                .reduce(function (a, b) { return a.concat(b); });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Midi.prototype, \"events\", {\r\n        get: function () {\r\n            return this.tracks\r\n                .map(function (track) { return track.events; })\r\n                .reduce(function (a, b) { return a.concat(b); });\r\n            //.sort(function(e1,e2){return e1.tick < e2.tick});\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Midi.prototype, \"tempoEvents\", {\r\n        get: function () {\r\n            if (this._tempoEvents.length > 0)\r\n                return this._tempoEvents; // return if memoized\r\n            // format 0: All events are on the zeroth track, including tempo events\r\n            // format 1: All tempo events are on the zeroth track\r\n            // format 2: Every track has tempo events (not supported)\r\n            return this._tempoEvents = this.tracks[0].events.filter(function (event) {\r\n                return event.subtype == 'setTempo';\r\n            });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Midi.prototype, \"duration\", {\r\n        get: function () {\r\n            return this.notes\r\n                .map(function (note) { return note.offSecond; })\r\n                .reduce(function (a, b) { return Math.max(a, b); }, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Midi.prototype.tickToSecond = function (tick) {\r\n        if (this._tickToSecond[tick])\r\n            return this._tickToSecond[tick];\r\n        var currentTick = 0;\r\n        var currentTempo = 500000;\r\n        var totalTime = 0;\r\n        for (var i = 0; i < this.tempoEvents.length; i++) {\r\n            var event = this.tempoEvents[i];\r\n            if (event.tick >= tick)\r\n                break;\r\n            totalTime += ((event.tick - currentTick) / this.ppqn) * currentTempo / 1000000.0;\r\n            currentTick = event.tick;\r\n            currentTempo = event.tempo;\r\n        }\r\n        totalTime += ((tick - currentTick) / this.ppqn) * currentTempo / 1000000.0;\r\n        return this._tickToSecond[tick] = totalTime;\r\n    };\r\n    Midi.prototype.notesOnAt = function (second) {\r\n        return this.tracks.map(function (track) { return track.notesOnAt(second); }).flat();\r\n    };\r\n    Midi.prototype.notesOnDuring = function (onSecond, offSecond) {\r\n        return this.tracks.map(function (track) { return track.notesOnDuring(onSecond, offSecond); }).flat();\r\n    };\r\n    return Midi;\r\n}());\r\nexport default Midi;\r\n//# sourceMappingURL=Midi.js.map","dts":{"name":"/Users/blakeley/Desktop/jadin/dist/types/Midi.d.ts","writeByteOrderMark":false,"text":"import Track from './Track';\r\nimport Cursor from './Cursor';\r\nimport Event from './Event';\r\nimport { Note } from './jadin';\r\nexport default class Midi {\r\n    format: number;\r\n    ppqn: number;\r\n    tracks: Track[];\r\n    private _tickToSecond;\r\n    private _tempoEvents;\r\n    constructor(data?: string);\r\n    createTrack(data?: string): Track;\r\n    newCursor(): Cursor;\r\n    get notes(): Note[];\r\n    get events(): Event[];\r\n    get tempoEvents(): Event[];\r\n    get duration(): number | null;\r\n    tickToSecond(tick: number): number;\r\n    notesOnAt(second: number): Note[];\r\n    notesOnDuring(onSecond: number, offSecond: number): Note[];\r\n}\r\n"}}
