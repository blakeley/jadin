{"map":"{\"version\":3,\"file\":\"Note.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/Note.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,MAAM,SAAS,CAAC;AAG5B;IAKE,cAAY,OAAqB,EAAE,QAAsB;QAA7C,wBAAA,EAAA,cAAc,KAAK,EAAE;QAAE,yBAAA,EAAA,eAAe,KAAK,EAAE;QACvD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACpB,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,sBAAI,wBAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC3B,CAAC;aAED,UAAW,KAAK;YACd,IAAI,KAAM,IAAI,IAAI,CAAC,OAAO;gBAAE,MAAM,0DAA0D,CAAA;YAC5F,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC;QAC5B,CAAC;;;OALA;IAOD,sBAAI,yBAAO;aAAX;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAK,CAAC;QAC7B,CAAC;aAED,UAAY,KAAa;YACvB,IAAI,KAAK,IAAI,IAAI,CAAC,MAAO;gBAAE,MAAM,uDAAuD,CAAA;YACxF,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,KAAK,CAAC;QAC7B,CAAC;;;OALA;IAOD,sBAAI,sBAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QACzB,CAAC;;;OAAA;IAED,sBAAI,wBAAM;aAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC7B,CAAC;aAED,UAAW,KAAK;YACd,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;QAC/B,CAAC;;;OALA;IAOD,sBAAI,0BAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC7B,CAAC;;;OAAA;IAED,sBAAI,2BAAS;aAAb;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAI,0BAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,SAAU,GAAG,IAAI,CAAC,QAAS,CAAC;QAC1C,CAAC;;;OAAA;IAED,mBAAI,GAAJ,UAAK,MAAc;QACjB,OAAO,IAAI,CAAC,QAAS,IAAI,MAAM,IAAI,MAAM,IAAI,IAAI,CAAC,SAAU,CAAC;IAC/D,CAAC;IAED,uBAAQ,GAAR,UAAS,QAAgB,EAAE,SAAiB;QAC1C,OAAO,IAAI,CAAC,QAAS,IAAI,SAAS,IAAI,IAAI,CAAC,SAAU,IAAI,QAAQ,CAAC;IACpE,CAAC;IACH,WAAC;AAAD,CAAC,AA9DD,IA8DC\"}","code":"import Event from './Event';\r\nvar Note = /** @class */ (function () {\r\n    function Note(onEvent, offEvent) {\r\n        if (onEvent === void 0) { onEvent = new Event(); }\r\n        if (offEvent === void 0) { offEvent = new Event(); }\r\n        this.onEvent = onEvent;\r\n        this.offEvent = offEvent;\r\n        onEvent.note = this;\r\n        offEvent.note = this;\r\n    }\r\n    Object.defineProperty(Note.prototype, \"onTick\", {\r\n        get: function () {\r\n            return this.onEvent.tick;\r\n        },\r\n        set: function (value) {\r\n            if (value >= this.offTick)\r\n                throw \"Cannot set onTick to be greater than or equal to offTick\";\r\n            this.onEvent.tick = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Note.prototype, \"offTick\", {\r\n        get: function () {\r\n            return this.offEvent.tick;\r\n        },\r\n        set: function (value) {\r\n            if (value <= this.onTick)\r\n                throw \"Cannot set offTick to be less than or equal to onTick\";\r\n            this.offEvent.tick = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Note.prototype, \"midi\", {\r\n        get: function () {\r\n            return this.track.midi;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Note.prototype, \"number\", {\r\n        get: function () {\r\n            return this.onEvent.number;\r\n        },\r\n        set: function (value) {\r\n            this.onEvent.number = value;\r\n            this.offEvent.number = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Note.prototype, \"onSecond\", {\r\n        get: function () {\r\n            return this.onEvent.second;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Note.prototype, \"offSecond\", {\r\n        get: function () {\r\n            return this.offEvent.second;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Note.prototype, \"duration\", {\r\n        get: function () {\r\n            return this.offSecond - this.onSecond;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Note.prototype.onAt = function (second) {\r\n        return this.onSecond <= second && second <= this.offSecond;\r\n    };\r\n    Note.prototype.onDuring = function (onSecond, offSecond) {\r\n        return this.onSecond <= offSecond && this.offSecond >= onSecond;\r\n    };\r\n    return Note;\r\n}());\r\nexport default Note;\r\n//# sourceMappingURL=Note.js.map","dts":{"name":"/Users/blakeley/Desktop/jadin/dist/types/Note.d.ts","writeByteOrderMark":false,"text":"import Event from './Event';\r\nimport Track from './Track';\r\nexport default class Note {\r\n    onEvent: Event;\r\n    offEvent: Event;\r\n    track: Track;\r\n    constructor(onEvent?: Event, offEvent?: Event);\r\n    get onTick(): number | undefined;\r\n    set onTick(value: number | undefined);\r\n    get offTick(): number;\r\n    set offTick(value: number);\r\n    get midi(): import(\"./Midi\").default;\r\n    get number(): number | undefined;\r\n    set number(value: number | undefined);\r\n    get onSecond(): number | null;\r\n    get offSecond(): number | null;\r\n    get duration(): number;\r\n    onAt(second: number): boolean;\r\n    onDuring(onSecond: number, offSecond: number): boolean;\r\n}\r\n"}}
